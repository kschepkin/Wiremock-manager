# Конфигурация nginx для обслуживания веб-интерфейса и проксирования API Wiremock
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    
    root /usr/share/nginx/html;
    index index.html;

    # Глобальные заголовки для отключения кеширования
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    
    # Глобальные CORS заголовки для всех запросов
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "3600" always;

    # Обработка preflight OPTIONS запросов
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "3600" always;
        add_header Content-Length "0";
        add_header Content-Type "text/plain";
        return 204;
    }

    # Обслуживание статических файлов веб-интерфейса
    location = / {
        try_files /index.html =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    location = /index.html {
        try_files $uri =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    location = /logs.html {
        try_files $uri =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    location = /config.json {
        try_files $uri =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Content-Type "application/json" always;
    }

    location = /script.js {
        try_files $uri =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Content-Type "application/javascript" always;
    }

    location = /logs.js {
        try_files $uri =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Content-Type "application/javascript" always;
    }

    location = /favicon.ico {
        try_files $uri =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Проксирование API Wiremock с полным отключением кеширования
    location / {
        # Отключение кеширования для проксируемых запросов
        proxy_cache off;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Заголовки для отключения кеширования на стороне клиента
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Проксирование в Wiremock
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Отключение буферизации для немедленной передачи ответов
        proxy_buffering off;
        proxy_request_buffering off;
    }
}